# Nombre del workflow que aparecerá en la pestaña "Actions" de GitHub
name: Cargar Datos CSV a MySQL

# Disparador: permite ejecutar el workflow manualmente
on:
  workflow_dispatch:
    # Define campos de entrada que GitHub te mostrará en un formulario
    inputs:
      csv_file:
        description: 'Nombre del archivo CSV a cargar (ej. ai_job_dataset.csv)'
        required: true
        default: 'flight.csv'
      table_name:
        description: 'Nombre de la tabla de destino en la BD (ej. jobs)'
        required: true
        default: 'jobs'

# Define los trabajos (jobs) que se ejecutarán
jobs:
  load-data:
    # El trabajo se ejecutará en una máquina virtual de Ubuntu
    runs-on: ubuntu-latest
    
    # Pasos que se ejecutarán en secuencia
    steps:
      # 1. Descarga el código de tu repositorio a la máquina virtual
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura el entorno de Python en la versión 3.10
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3. Instala las librerías de Python necesarias para el script
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas mysql-connector-python

      # 4. Ejecuta el script que crea la tabla y carga los datos
      - name: Run create and load script
        # Asegúrate de que tu script se llame 'crear_y_cargar.py'
        run: python crear_y_cargar.py
        env:
          # Pasa los valores de los inputs y los secretos como variables de entorno
          CSV_FILENAME: ${{ github.event.inputs.csv_file }}
          TABLE_NAME: ${{ github.event.inputs.table_name }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}